// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OperationShuldersAPi.Models;

#nullable disable

namespace OperationShuldersAPi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241226121606_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OperationShuldersAPi.Models.OperatingRoom", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("EquipmentDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoomId");

                    b.ToTable("OperatingRooms");
                });

            modelBuilder.Entity("OperationShuldersAPi.Models.OperationSchedule", b =>
                {
                    b.Property<int>("Operation_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Operation_Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("EndTime")
                        .HasColumnType("time");

                    b.Property<int>("OperatingRoomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OperationDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SurgeonId")
                        .HasColumnType("int");

                    b.HasKey("Operation_Id");

                    b.HasIndex("OperatingRoomId");

                    b.HasIndex("SurgeonId");

                    b.ToTable("OperationSchedules");
                });

            modelBuilder.Entity("OperationShuldersAPi.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("OperationShuldersAPi.Models.Specialization", b =>
                {
                    b.Property<int>("SpecializationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpecializationId"));

                    b.Property<string>("SpecializationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SpecializationId");

                    b.ToTable("Specializations");
                });

            modelBuilder.Entity("OperationShuldersAPi.Models.Surgeon", b =>
                {
                    b.Property<int>("SurgeonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SurgeonId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("ContactInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SpecializationId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("SurgeonId");

                    b.HasIndex("SpecializationId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Surgeons");
                });

            modelBuilder.Entity("OperationShuldersAPi.Models.Users", b =>
                {
                    b.Property<int>("User_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("User_Id"));

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("User_Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("OperationShuldersAPi.Models.OperationSchedule", b =>
                {
                    b.HasOne("OperationShuldersAPi.Models.OperatingRoom", "OperatingRoom")
                        .WithMany("OperationSchedules")
                        .HasForeignKey("OperatingRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OperationShuldersAPi.Models.Surgeon", "Surgeon")
                        .WithMany("OperationSchedules")
                        .HasForeignKey("SurgeonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OperatingRoom");

                    b.Navigation("Surgeon");
                });

            modelBuilder.Entity("OperationShuldersAPi.Models.Surgeon", b =>
                {
                    b.HasOne("OperationShuldersAPi.Models.Specialization", "Specialization")
                        .WithMany("Surgeons")
                        .HasForeignKey("SpecializationId");

                    b.HasOne("OperationShuldersAPi.Models.Users", "User")
                        .WithOne("Surgeon")
                        .HasForeignKey("OperationShuldersAPi.Models.Surgeon", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Specialization");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OperationShuldersAPi.Models.OperatingRoom", b =>
                {
                    b.Navigation("OperationSchedules");
                });

            modelBuilder.Entity("OperationShuldersAPi.Models.Specialization", b =>
                {
                    b.Navigation("Surgeons");
                });

            modelBuilder.Entity("OperationShuldersAPi.Models.Surgeon", b =>
                {
                    b.Navigation("OperationSchedules");
                });

            modelBuilder.Entity("OperationShuldersAPi.Models.Users", b =>
                {
                    b.Navigation("Surgeon")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
